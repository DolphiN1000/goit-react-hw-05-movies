{"version":3,"file":"static/js/609.ed6d17d2.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/SinglMoviePage/singlMoviePage.module.scss?0eb6","pages/SinglMoviePage/SinglMoviePage.jsx","shared/services/TheMoviesAPI.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"thumb\":\"singlMoviePage_thumb__5xNZh\"};","import { useEffect, useState, useCallback } from 'react';\nimport {\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\n\nimport { getFilmInfo } from 'shared/services/TheMoviesAPI';\n\nimport styles from './singlMoviePage.module.scss';\n\nconst SinglMoviePage = () => {\n  const [movie, setMovie] = useState();\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const result = await getFilmInfo(id);\n        setMovie(result);\n      } catch (error) {}\n    };\n    fetchMovie();\n  }, [id]);\n  const goBack = useCallback(() => navigate(from), [navigate, from]);\n  return (\n    <>\n      {movie && (\n        <>\n          <button onClick={goBack}>Go Back</button>\n          <div className={styles.thumb}>\n            {' '}\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt={`poster of movie with name \"${movie.title}\"`}\n              height=\"400\"\n            />\n            <div className={styles.info}>\n              {' '}\n              <h3>\n                Title: {movie.title} ({movie.release_date.slice(0, 4)})\n              </h3>\n              <p>User Score: {Math.round(movie.vote_average * 10)}%</p>\n              <h4>Owerview</h4>\n              <p>{movie.overview}</p>\n              <h5>Generes</h5>\n              <p>{movie.genres.map(item => item.name).join(', ')}</p>\n            </div>\n          </div>\n          <div>\n            <h6>Additional information</h6>\n            <ul>\n              <li>\n                {' '}\n                <Link to={`/movies/${movie.id}/cast`} state={{ from: from }}>\n                  Cast\n                </Link>\n              </li>\n              <li>\n                {' '}\n                <Link to={`/movies/${movie.id}/reviews`} state={{ from: from }}>\n                  Rewiews\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default SinglMoviePage;","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: `https://api.themoviedb.org/3/`,\n  params: {\n    api_key: '6c57fb02719926393bb8c06aa147886f',\n    language: 'en-US',\n    // include_adult: false,\n  },\n});\n\nexport const searchMovie = async (query, page = 1) => {\n  const { data } = await instance.get(`search/movie`, {\n    params: {\n      query,\n      page,\n    },\n  });\n  return data.results;\n};\n\nexport const getMostPopular = async () => {\n  const reqURL = `trending/movie/day`;\n  const { data } = await instance.get(reqURL);\n  return data.results;\n};\n\nexport const getFilmInfo = async id => {\n  const { data } = await instance.get(`movie/${id}?`);\n\n  return data;\n};\n\nexport const getCredits = async id => {\n  const { data } = await instance.get(`movie/${id}/credits?`);\n  return data.cast;\n};\n\nexport const getReviews = async id => {\n  const { data } = await instance.get(`movie/${id}/reviews?`);\n  return data.results;\n};\n"],"names":["_location$state","_useState","useState","_useState2","_slicedToArray","movie","setMovie","id","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","result","_context","prev","next","getFilmInfo","sent","t0","stop","apply","arguments","goBack","useCallback","_jsx","_Fragment","children","_jsxs","onClick","className","styles","src","concat","poster_path","alt","title","height","release_date","slice","Math","round","vote_average","overview","genres","map","item","name","join","Link","to","Outlet","instance","axios","baseURL","params","api_key","language","searchMovie","query","page","_yield$instance$get","data","_args","length","undefined","get","abrupt","results","_x","getMostPopular","_ref2","_callee2","_yield$instance$get2","_context2","_ref3","_callee3","_yield$instance$get3","_context3","_x2","getCredits","_ref4","_callee4","_yield$instance$get4","_context4","cast","_x3","getReviews","_ref5","_callee5","_yield$instance$get5","_context5","_x4"],"sourceRoot":""}