{"version":3,"file":"static/js/115.3d951231.chunk.js","mappings":"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","sources":["pages/Cast/Cast.jsx","shared/services/TheMoviesAPI.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCredits } from 'shared/services/TheMoviesAPI';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchCredits = async () => {\n      try {\n        const result = await getCredits(id);\n        setCast(result);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchCredits();\n  }, [id]);\n  const elements = cast.map(({ id, name, character, profile_path }) => (\n    <li key={id}>\n      {profile_path && (\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n          alt={`the sempel of ${name}`}\n          width=\"200\"\n        ></img>\n      )}\n      <p>{name}</p>\n      <p>{character}</p>\n    </li>\n  ));\n  return (\n    <ul>\n      {elements.length !== 0\n        ? elements\n        : 'We don`t have any casts for this movie'}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: `https://api.themoviedb.org/3/`,\n  params: {\n    api_key: '6c57fb02719926393bb8c06aa147886f',\n    language: 'en-US',\n    // include_adult: false,\n  },\n});\n\nexport const searchMovie = async (query, page = 1) => {\n  const { data } = await instance.get(`search/movie`, {\n    params: {\n      query,\n      page,\n    },\n  });\n  return data.results;\n};\n\nexport const getMostPopular = async () => {\n  const reqURL = `trending/movie/day`;\n  const { data } = await instance.get(reqURL);\n  return data.results;\n};\n\nexport const getFilmInfo = async id => {\n  const { data } = await instance.get(`movie/${id}?`);\n\n  return data;\n};\n\nexport const getCredits = async id => {\n  const { data } = await instance.get(`movie/${id}/credits?`);\n  return data.cast;\n};\n\nexport const getReviews = async id => {\n  const { data } = await instance.get(`movie/${id}/reviews?`);\n  return data.results;\n};\n"],"names":["_useState","useState","_useState2","_slicedToArray","cast","setCast","id","useParams","useEffect","fetchCredits","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","result","_context","prev","next","getCredits","sent","t0","console","log","message","stop","apply","arguments","elements","map","_ref2","name","character","profile_path","_jsxs","children","_jsx","src","concat","alt","width","length","instance","axios","baseURL","params","api_key","language","searchMovie","query","page","_yield$instance$get","data","_args","undefined","get","abrupt","results","_x","getMostPopular","_callee2","_yield$instance$get2","_context2","getFilmInfo","_ref3","_callee3","_yield$instance$get3","_context3","_x2","_ref4","_callee4","_yield$instance$get4","_context4","_x3","getReviews","_ref5","_callee5","_yield$instance$get5","_context5","_x4"],"sourceRoot":""}